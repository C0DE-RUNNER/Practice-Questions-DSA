Given an array of names (consisting of lowercase characters) of candidates in an election. A candidate name in array represents a vote casted to the candidate. Print the name of candidate that received Max votes. If there is tie, print lexicographically smaller name.

Example 1:

Input:
N = 13
Votes[] = {john,johnny,jackie,johnny,john 
jackie,jamie,jamie,john,johnny,jamie,
johnny,john}
Output: john 4
Explanation: john has 4 votes casted for 
him, but so does johny. john is 
lexicographically smaller, so we print 
john and the votes he received.
Example 2:

Input:
N = 3
Votes[] = {andy,blake,clark}
Output: andy 1
Explanation: All the candidates get 1 
votes each. We print andy as it is 
lexicographically smaller.
Your Task:
You only need to complete the function winner() that takes an array of strings arr, and n as parameters and returns the name of the candiate with maximum votes and the number of votes the candidate got as an array of size 2.

Expected Time Complexity: O(N)
Expected Auxiliary Space: O(N)

Constraints:
1 <= N <= 105


**********************************************************************************************************************************************************



vector<string> winner(string arr[],int n)
{
    string s;
    vector<string> v;
    int m=0;
    map<string,int> mp;
    for(int i=0;i<n;i++)
    mp[arr[i]]++;
    s=arr[0];
    m=mp[arr[0]];
    for(auto i : mp){
        if(i.second>m){
        m=i.second;
        s=i.first;
        }
        if(i.second==m)
        s=min(i.first,s);
    }
    v.push_back(s);
    s=to_string(m);
    v.push_back(s);
    return v;
}
